import random
import json
import requests
from datetime import datetime, timedelta
from fastapi import APIRouter

router = APIRouter()
# 1) ES 접속 정보
ES_URL = "http://elasticsearch:9200"
ES_USER = "fastapi_user"
ES_PASS = "e203@Password!"

# 2) dongId 리스트
dong_ids = [
    11110515, 11110530, 11110540, 11110550, 11110560, 11110570, 11110580, 11110600,
    11110615, 11110630, 11110640, 11110650, 11110670, 11110680, 11110690, 11110700,
    11110710, 11140520, 11140540, 11140550, 11140570, 11140580, 11140590, 11140605,
    11140615, 11140625, 11140635, 11140645, 11140650, 11140665, 11140670, 11140680,
    11170510, 11170520, 11170530, 11170555, 11170560, 11170570, 11170580, 11170590,
    11170625, 11170630, 11170640, 11170650, 11170660, 11170685, 11170690, 11170700,
    11200520, 11200535, 11200540, 11200550, 11200560, 11200570, 11200580, 11200590,
    11200615, 11200620, 11200645, 11200650, 11200660, 11200670, 11200690, 11200720,
    11200790, 11215710, 11215730, 11215740, 11215750, 11215760, 11215770, 11215780,
    11215810, 11215820, 11215830, 11215840, 11215847, 11215850, 11215860, 11215870,
    11230536, 11230545, 11230560, 11230570, 11230600, 11230610, 11230650, 11230660,
    11230705, 11230710, 11230720, 11230730, 11230740, 11230750, 11260520, 11260540,
    11260550, 11260565, 11260570, 11260575, 11260580, 11260590, 11260600, 11260610,
    11260620, 11260630, 11260655, 11260660, 11260680, 11260690, 11290525, 11290555,
    11290575, 11290580, 11290590, 11290600, 11290610, 11290620, 11290630, 11290640,
    11290650, 11290660, 11290685, 11290705, 11290715, 11290725, 11290760, 11290770,
    11290780, 11290810, 11305534, 11305535, 11305545, 11305555, 11305575, 11305595,
    11305603, 11305608, 11305615, 11305625, 11305635, 11305645, 11305660, 11320511,
    11320512, 11320513, 11320514, 11320515, 11320521, 11320522, 11320660, 11320670,
    11320680, 11320681, 11320690, 11320700, 11320710, 11350560, 11350570, 11350580,
    11350595, 11350600, 11350611, 11350612, 11350619, 11350621, 11350624, 11350625,
    11350630, 11350640, 11350665, 11350670, 11350695, 11350700, 11350710, 11350720,
    11380510, 11380520, 11380530, 11380551, 11380552, 11380560, 11380570, 11380580,
    11380590, 11380600, 11380625, 11380631, 11380632, 11380640, 11380650, 11380690,
    11410520, 11410555, 11410565, 11410585, 11410615, 11410620, 11410640, 11410655,
    11410660, 11410685, 11410690, 11410700, 11410710, 11410720, 11440555, 11440565,
    11440585, 11440590, 11440600, 11440610, 11440630, 11440655, 11440660, 11440680,
    11440690, 11440700, 11440710, 11440720, 11440730, 11440740, 11470510, 11470520,
    11470530, 11470540, 11470550, 11470560, 11470570, 11470580, 11470590, 11470600,
    11470610, 11470611, 11470620, 11470630, 11470640, 11470650, 11470670, 11470680,
    11500510, 11500520, 11500530, 11500535, 11500540, 11500550, 11500560, 11500570,
    11500590, 11500591, 11500593, 11500603, 11500604, 11500605, 11500611, 11500615,
    11500620, 11500630, 11500640, 11500641, 11530510, 11530520, 11530530, 11530540,
    11530550, 11530560, 11530595, 11530720, 11530730, 11530740, 11530750, 11530760,
    11530770, 11530780, 11530790, 11530800, 11545510, 11545610, 11545620, 11545630,
    11545640, 11545670, 11545680, 11545690, 11545700, 11545710, 11560515, 11560535,
    11560540, 11560550, 11560560, 11560585, 11560605, 11560610, 11560620, 11560630,
    11560650, 11560660, 11560670, 11560680, 11560690, 11560700, 11560710, 11560720,
    11590510, 11590520, 11590530, 11590540, 11590550, 11590560, 11590605, 11590620,
    11590630, 11590640, 11590650, 11590651, 11590660, 11590670, 11590680, 11620525,
    11620545, 11620565, 11620575, 11620585, 11620595, 11620605, 11620615, 11620625,
    11620630, 11620645, 11620655, 11620665, 11620685, 11620695, 11620715, 11620725,
    11620735, 11620745, 11620765, 11620775, 11650510, 11650520, 11650530, 11650531,
    11650540, 11650550, 11650560, 11650570, 11650580, 11650581, 11650590, 11650600,
    11650610, 11650620, 11650621, 11650651, 11650652, 11650660, 11680510, 11680521,
    11680531, 11680545, 11680565, 11680580, 11680590, 11680600, 11680610, 11680630,
    11680640, 11680650, 11680655, 11680656, 11680660, 11680670, 11680675, 11680690,
    11680700, 11680720, 11680730, 11680750, 11710510, 11710520, 11710531, 11710532,
    11710540, 11710550, 11710561, 11710562, 11710566, 11710570, 11710580, 11710590,
    11710600, 11710610, 11710620, 11710631, 11710632, 11710641, 11710642, 11710646,
    11710647, 11710650, 11710670, 11710680, 11710690, 11710710, 11710720, 11740515,
    11740525, 11740526, 11740530, 11740540, 11740550, 11740560, 11740570, 11740580,
    11740590, 11740600, 11740610, 11740620, 11740640, 11740650, 11740660, 11740685,
    11740690, 11740700
]

@router.post("/create-logs")
def create_logs_api(count: int = 1000, index_name: str = "logs"):
    """ 
    요청 시, count만큼 무작위 로그를 생성하고 ES에 저장 
    Args:
      count (int): 생성할 로그 개수
      index_name (str): 삽입할 인덱스 이름
    """
    # 1) 로그 생성
    logs = generate_activity_logs(count)
    # 2) Bulk Insert
    bulk_insert_es(logs, index_name)
    return {"message": f"{count} logs inserted into ES index '{index_name}' successfully!"}


def generate_activity_logs(n=1000):
    """ n개의 액티비티 로그를 무작위로 생성하여 리스트로 반환 """
    actions = ["zzim", "view"]
    genders = ["male", "female"]
    logs = []

    for _ in range(n):
        doc = {
            "userId": random.randint(1, 5000),            # userId 1~5000
            "propertyId": random.randint(0, 87500),       # 0 ~ 87500
            "action": random.choice(actions),             # zzim / view
            "age": random.randint(20, 60),                # 나이 20~60
            "gender": random.choice(genders),             # male / female
            "dongId": random.choice(dong_ids),            # dongId 중 하나
            # 최근 30일 범위에서 랜덤 시간
            "time": (datetime.utcnow() - timedelta(days=random.randint(0,30))).isoformat() + "Z"
        }
        logs.append(doc)
    return logs


def bulk_insert_es(logs, index_name="logs"):
    """ Bulk API로 logs를 ES에 넣는 함수 """
    bulk_data = []
    for doc in logs:
        meta = {
            "index": {
                "_index": index_name
            }
        }
        bulk_data.append(json.dumps(meta))
        bulk_data.append(json.dumps(doc))

    body = "\n".join(bulk_data) + "\n"
    headers = {"Content-Type": "application/x-ndjson"}

    # 인증 (Basic Auth)
    res = requests.post(
        f"{ES_URL}/_bulk",
        data=body,
        headers=headers,
        auth=(ES_USER, ES_PASS),  # fastapi_user + e203@Password!
        verify=False
    )
    print("Status:", res.status_code)
    print("Response:", res.text)
